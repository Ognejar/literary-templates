/**
 * @file       createPort.js
 * @description –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ä—Ç–∞ –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞ Literary Templates
 * @author     AI Assistant
 * @version    1.0.0
 * @license    MIT
 * @dependencies PortWizardModal, ensureEntityInfrastructure, findProjectRoot, generateFromTemplate, findTagImage
 * @created    2025-01-09
 * @updated    2025-01-09
 * @docs       docs/–ö–∞—Ä—Ç–æ—á–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.md
 */

// –ò–º–ø–æ—Ä—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ main.js
const { findProjectRoot, generateFromTemplate, ensureEntityInfrastructure, safeCreateFile } = require('../main.js');
const { TFile } = require('obsidian');

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø–æ—Ä—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
 * @param {Object} plugin - –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–≥–∏–Ω–∞
 * @param {string} startPath - –ù–∞—á–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
 */
async function createPort(plugin, startPath = '') {
    try {
        await plugin.logDebug('=== createPort –≤—ã–∑–≤–∞–Ω–∞ ===');
        await plugin.logDebug('startPath: ' + startPath);

        // –ù–∞—Ö–æ–¥–∏–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
        let projectRoot = '';
        if (startPath) {
            projectRoot = findProjectRoot(plugin.app, startPath);
        }
        let project = '';
        if (projectRoot) {
            project = projectRoot;
        } else {
            const allFiles = plugin.app.vault.getMarkdownFiles();
            const projectFiles = allFiles.filter(f => f.basename === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–º–∏—Ä–∞');
            const projects = projectFiles.map(f => f.parent.path);
            if (projects.length === 0) {
                new Notice('–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                await plugin.logDebug('–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                return;
            }
            project = await plugin.selectProject(projects);
            if (!project) return;
        }
        await plugin.logDebug('project: ' + project);

        const modal = new PortWizardModal(plugin.app, Modal, Setting, Notice, project, async (portData) => {
            try {
                await plugin.logDebug('–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏: ' + JSON.stringify(portData));
                
                // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
                const cleanName = portData.portName.trim().replace(/[^–∞-—è–ê-–Ø—ë–Å\w\s-.]/g, '').replace(/\s+/g, '_');
                
                // –ò—â–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –ø–æ—Ä—Ç–∞
                const imageBlock = window.litSettingsService ? window.litSettingsService.getTagImageBlock(plugin.app, projectRoot, '–ü–æ—Ä—Ç') : '';
                
                // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏
                const mainGoodsSection = (portData.mainGoods || []).map(f => `- ${f}`).join('\n') || '';
                const shipsSection = (portData.ships || []).map(f => `- ${f}`).join('\n') || '';
                const featuresSection = (portData.features || []).map(f => `- ${f}`).join('\n') || '';
                
                let provinceSection = '';
                if (portData.province && portData.province.trim()) {
                    provinceSection = `**–ü—Ä–æ–≤–∏–Ω—Ü–∏—è:** [[${portData.province.trim()}]]`;
                }
                
                let stateSection = '';
                if (portData.state && portData.state.trim()) {
                    stateSection = `**–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ:** [[${portData.state.trim()}]]`;
                }
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
                const data = {
                    name: portData.portName,
                    type: portData.type || '–ü–æ—Ä—Ç',
                    climate: portData.climate || '',
                    dominantFaction: portData.dominantFaction || '',
                    harborType: portData.harborType || '',
                    province: portData.province || '',
                    state: portData.state || '',
                    country: portData.country || '',
                    // –°—Ç–∞—Ç—É—Å –∏ –ø—Ä–∏—á–∏–Ω–∞
                    status: portData.status || '–¥–µ–π—Å—Ç–≤—É–µ—Ç',
                    statusReason: portData.statusReason || '',
                    statusLabel: (portData.status === '–∑–∞–±—Ä–æ—à–µ–Ω–æ' ? 'üèöÔ∏è –ó–∞–±—Ä–æ—à–µ–Ω–æ' : (portData.status === '—Ä–∞–∑—Ä—É—à–µ–Ω–æ' ? 'üí• –†–∞–∑—Ä—É—à–µ–Ω–æ' : '‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç')),
                    date: window.moment ? window.moment().format('YYYY-MM-DD') : new Date().toISOString().slice(0, 10),
                    projectName: project.split('/').pop(),
                    // –ê–≤—Ç–æ—Å—Å—ã–ª–∫–∏ –¥–ª—è –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
                    description: portData.description || `[[${cleanName}_–û–ø–∏—Å–∞–Ω–∏–µ|–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞]]`,
                    history: portData.history || `[[${cleanName}_–ò—Å—Ç–æ—Ä–∏—è|–ò—Å—Ç–æ—Ä–∏—è –ø–æ—Ä—Ç–∞]]`,
                    economy: portData.economy || `[[${cleanName}_–≠–∫–æ–Ω–æ–º–∏–∫–∞|–≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø–æ—Ä—Ç–∞]]`,
                    culture: portData.culture || `[[${cleanName}_–ö—É–ª—å—Ç—É—Ä–∞|–ö—É–ª—å—Ç—É—Ä–∞ –ø–æ—Ä—Ç–∞]]`,
                    modernProblems: portData.modernProblems || `[[${cleanName}_–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ_–ø—Ä–æ–±–ª–µ–º—ã|–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–æ—Ä—Ç–∞]]`,
                    geography: portData.geography || `[[${cleanName}_–ì–µ–æ–≥—Ä–∞—Ñ–∏—è|–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø–æ—Ä—Ç–∞]]`,
                    infrastructure: portData.infrastructure || `[[${cleanName}_–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞|–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä—Ç–∞]]`,
                    production: portData.production || `[[${cleanName}_–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ|–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –ø–æ—Ä—Ç–∞]]`,
                    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
                    docks: portData.docks || '',
                    mainGoodsSection: mainGoodsSection,
                    shipsSection: shipsSection,
                    featuresSection: featuresSection,
                    provinceSection: provinceSection,
                    stateSection: stateSection,
                    imageBlock
                };
                
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞
                const content = await generateFromTemplate('–ù–æ–≤—ã–π_–ø–æ—Ä—Ç', data, plugin);
                
                // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
                const fileName = cleanName;
                const targetFolder = `${project}/–õ–æ–∫–∞—Ü–∏–∏/–ü–æ—Ä—Ç—ã`;
                await ensureEntityInfrastructure(targetFolder, fileName, plugin.app);
                const targetPath = `${targetFolder}/${fileName}.md`;
                await safeCreateFile(targetPath, content, plugin.app);
                
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
                const file = plugin.app.vault.getAbstractFileByPath(targetPath);
                if (file instanceof TFile) {
                    await plugin.app.workspace.getLeaf().openFile(file);
                }
                
                new Notice(`–°–æ–∑–¥–∞–Ω –ø–æ—Ä—Ç: ${fileName}`);
                await plugin.logDebug(`–ü–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω: ${targetPath}`);
                
            } catch (error) {
                new Notice('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Ä—Ç–∞: ' + error.message);
                await plugin.logDebug('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ä—Ç–∞: ' + error.message);
            }
        });
        modal.open();
    } catch (error) {
        new Notice('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Ä—Ç–∞: ' + error.message);
        await plugin.logDebug('–û—à–∏–±–∫–∞: ' + error.message);
    }
}

module.exports = { createPort };
