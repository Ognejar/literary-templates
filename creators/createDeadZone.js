/**
 * @file       createDeadZone.js
 * @description –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä—Ç–≤–æ–π –∑–æ–Ω—ã –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞ Literary Templates
 * @author     AI Assistant
 * @version    1.0.0
 * @license    MIT
 * @dependencies main.js, DeadZoneWizardModal.js
 * @created    2025-01-09
 * @updated    2025-01-09
 * @docs       docs/project.md
 */

var createDeadZone = async function(plugin, startPath = '', options = {}) {
    try {
        await plugin.logDebug('=== createDeadZone –≤—ã–∑–≤–∞–Ω–∞ ===');
        await plugin.logDebug('startPath: ' + startPath);

        let resolvedProjectRoot = '';
        if (startPath) {
            resolvedProjectRoot = findProjectRoot(plugin.app, startPath) || startPath;
        }
        let project = '';
        if (resolvedProjectRoot) {
            project = resolvedProjectRoot;
        } else {
            const allFiles = plugin.app.vault.getMarkdownFiles();
            const projectFiles = allFiles.filter(f => f.basename === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–º–∏—Ä–∞');
            const projects = projectFiles.map(f => f.parent.path);
            if (projects.length === 0) {
                new Notice('–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                await plugin.logDebug('–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                return;
            }
            project = await plugin.selectProject(projects);
            if (!project) return;
        }
        await plugin.logDebug('project: ' + project);

        const modal = new DeadZoneWizardModal(plugin.app, Modal, Setting, Notice, project, async (deadZoneData) => {
            const cleanName = deadZoneData.zoneName.trim().replace(/[^–∞-—è–ê-–Ø—ë–Å\w\s-.]/g, '').replace(/\s+/g, '_');
            const findingsContent = deadZoneData.findings.map(f => `- ${f}`).join('\n');

            const createdDate = window.moment().format('YYYY-MM-DD');
            const projectName = project.split('/').pop();
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π
            let imageBlock = '';
            if (window.litSettingsService) {
                // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
                imageBlock = window.litSettingsService.getTagImageBlock(plugin.app, project, '–ú—ë—Ä—Ç–≤–∞—è –∑–æ–Ω–∞');
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –±–µ–∑ —ë
                if (!imageBlock) {
                    imageBlock = window.litSettingsService.getTagImageBlock(plugin.app, project, '–ú–µ—Ä—Ç–≤–∞—è –∑–æ–Ω–∞');
                }
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –æ–±—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                if (!imageBlock) {
                    imageBlock = window.litSettingsService.getTagImageBlock(plugin.app, project, '–õ–æ–∫–∞—Ü–∏—è');
                }
            }
            
            const templateContent = await plugin.readTemplateFile('–ù–æ–≤–∞—è_–º–µ—Ä—Ç–≤–∞—è_–∑–æ–Ω–∞');
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–µ–∫—Ü–∏–∏ —é—Ä–∏—Å–¥–∏–∫—Ü–∏–∏
            let provinceSection = '';
            if (deadZoneData.province && deadZoneData.province.trim()) {
                provinceSection = `**–ü—Ä–æ–≤–∏–Ω—Ü–∏—è:** [[${deadZoneData.province.trim()}]]`;
            }
            let stateSection = '';
            if (deadZoneData.state && deadZoneData.state.trim()) {
                stateSection = `**–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ:** [[${deadZoneData.state.trim()}]]`;
            }

            let content = plugin.applyTemplate(templateContent, {
                date: createdDate,
                zoneName: deadZoneData.zoneName,
                climate: deadZoneData.climate,
                faction: deadZoneData.faction,
                description: deadZoneData.description,
                oldEconomy: deadZoneData.oldEconomy || '',
                currentState: deadZoneData.currentState || '',
                // –°—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –º—ë—Ä—Ç–≤—ã—Ö –∑–æ–Ω
                status: deadZoneData.status || '–∑–∞–±—Ä–æ—à–µ–Ω–æ',
                statusReason: deadZoneData.statusReason || '–ó–∞—Ç–æ–ø–ª–µ–Ω–∏–µ',
                statusLabel: (deadZoneData.status === '–∑–∞–±—Ä–æ—à–µ–Ω–æ'
                    ? 'üèöÔ∏è –ó–∞–±—Ä–æ—à–µ–Ω–æ'
                    : (deadZoneData.status === '—Ä–∞–∑—Ä—É—à–µ–Ω–æ'
                        ? 'üí• –†–∞–∑—Ä—É—à–µ–Ω–æ'
                        : '‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç')),
                province: deadZoneData.province || '',
                state: deadZoneData.state || '',
                country: deadZoneData.country || deadZoneData.state || '',
                provinceSection,
                stateSection,
                findingsContent: findingsContent,
                projectName: projectName,
                imageBlock: imageBlock
            });

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –∑–∞–º–µ–Ω—ã –∫–ª—é—á–µ–≤—ã—Ö –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
            content = content
                .replace(/{{province}}/g, deadZoneData.province || '')
                .replace(/{{state}}/g, (deadZoneData.state || ''))
                .replace(/{{country}}/g, (deadZoneData.country || deadZoneData.state || ''))
                .replace(/{{statusLabel}}/g, (deadZoneData.status === '–∑–∞–±—Ä–æ—à–µ–Ω–æ'
                    ? 'üèöÔ∏è –ó–∞–±—Ä–æ—à–µ–Ω–æ'
                    : (deadZoneData.status === '—Ä–∞–∑—Ä—É—à–µ–Ω–æ'
                        ? 'üí• –†–∞–∑—Ä—É—à–µ–Ω–æ'
                        : '‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç')));
            
            const fileName = cleanName;
            const targetFolder = `${project}/–õ–æ–∫–∞—Ü–∏–∏`;
            await ensureEntityInfrastructure(targetFolder, fileName, plugin.app);
            const targetPath = `${targetFolder}/${fileName}.md`;
            await safeCreateFile(targetPath, content, plugin.app);
            const file = plugin.app.vault.getAbstractFileByPath(targetPath);
            if (file instanceof TFile) {
                await plugin.app.workspace.getLeaf().openFile(file);
            }
            new Notice(`–°–æ–∑–¥–∞–Ω–∞ –º–µ—Ä—Ç–≤–∞—è –∑–æ–Ω–∞: ${fileName}`);
        });
        modal.open();
    } catch (error) {
        new Notice('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ—Ä—Ç–≤–æ–π –∑–æ–Ω—ã: ' + error.message);
        await plugin.logDebug('–û—à–∏–±–∫–∞: ' + error.message);
    }
};

module.exports = { createDeadZone };
