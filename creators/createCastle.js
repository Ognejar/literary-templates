/**
 * @file       createCastle.js
 * @description –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–∑–∞–º–æ–∫/–∫—Ä–µ–ø–æ—Å—Ç—å/—Ñ–æ—Ä—Ç)
 */

const { findProjectRoot, generateFromTemplate, ensureEntityInfrastructure, safeCreateFile } = require('../main.js');

async function createCastle(plugin, startPath = '', quickType = '') {
    try {
        let projectRoot = '';
        if (startPath) {
            projectRoot = findProjectRoot(plugin.app, startPath);
        }
        let project = '';
        if (projectRoot) {
            project = projectRoot;
        } else {
            const allFiles = plugin.app.vault.getMarkdownFiles();
            const projectFiles = allFiles.filter(f => f.basename === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏_–º–∏—Ä–∞');
            const projects = projectFiles.map(f => f.parent.path);
            if (projects.length === 0) {
                new Notice('–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                return;
            }
            project = await plugin.selectProject(projects);
            if (!project) return;
        }

        const modal = new CastleWizardModal(plugin.app, Modal, Setting, Notice, project, async (castleData) => {
            const cleanName = castleData.castleName.trim().replace(/[^–∞-—è–ê-–Ø—ë–Å\w\s-.]/g, '').replace(/\s+/g, '_');
            const fortificationsContent = (castleData.fortifications || []).map(f => `- ${f}`).join('\n');
            const garrisonContent = (castleData.garrison || []).map(g => `- ${g}`).join('\n');
            const notableFeaturesContent = (castleData.notableFeatures || []).map(f => `- ${f}`).join('\n');

            // –ö–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ —Ç–∏–ø—É
            const baseName = castleData.fortificationType || castleData.type || '–ó–∞–º–æ–∫';
            const tagImage = window.litSettingsService ? window.litSettingsService.findTagImage(plugin.app, project, baseName) : '';
            const imageBlock = tagImage ? `![[${tagImage}]]` : '';

            // –î–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
            const data = {
                ...castleData,
                fortificationType: castleData.fortificationType || castleData.type || '–ó–∞–º–æ–∫',
                type: castleData.fortificationType || castleData.type || '–ó–∞–º–æ–∫',
                cleanName: cleanName,
                date: window.moment ? window.moment().format('YYYY-MM-DD') : new Date().toISOString().slice(0, 10),
                projectName: project.split('/').pop(),
                state: castleData.state || '',
                country: castleData.state || '', // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏
                // –°—Ç–∞—Ç—É—Å –∏ –ø—Ä–∏—á–∏–Ω–∞
                status: castleData.status || '–¥–µ–π—Å—Ç–≤—É–µ—Ç',
                statusReason: castleData.statusReason || '',
                statusLabel: (castleData.status === '–∑–∞–±—Ä–æ—à–µ–Ω–æ' ? 'üèöÔ∏è –ó–∞–±—Ä–æ—à–µ–Ω–æ' : (castleData.status === '—Ä–∞–∑—Ä—É—à–µ–Ω–æ' ? 'üí• –†–∞–∑—Ä—É—à–µ–Ω–æ' : '‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç')),
                fortificationsContent,
                garrisonContent,
                notableFeaturesContent,
                imageBlock
            };

            const content = await generateFromTemplate('–ù–æ–≤–∞—è_—Ñ–æ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è', data, plugin);
            const fileName = cleanName;
            const targetFolder = `${project}/–õ–æ–∫–∞—Ü–∏–∏/–§–æ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏`;
            await ensureEntityInfrastructure(targetFolder, fileName, plugin.app);
            const targetPath = `${targetFolder}/${fileName}.md`;
            await safeCreateFile(targetPath, content, plugin.app);

            const file = plugin.app.vault.getAbstractFileByPath(targetPath);
            if (file instanceof TFile) {
                await plugin.app.workspace.getLeaf().openFile(file);
            }
            new Notice(`–°–æ–∑–¥–∞–Ω–∞ —Ñ–æ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: ${fileName}`);
        });
        if (quickType) {
            modal.prefillType = quickType;
        }
        modal.open();
    } catch (error) {
        new Notice('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–æ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ' + error.message);
    }
}

module.exports = { createCastle };
